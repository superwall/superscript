{"version":3,"file":"static/js/606.1013e45f.chunk.js","mappings":"g0EAGAA,EAAAA,EAAAA,IAAeC,GAGfA,EAAAA,mB,qCCNA,IAAIA,EACG,SAASD,EAAeE,GAC3BD,EAAOC,CACX,C,oTAGA,MAAMC,EAAO,IAAIC,MAAM,KAAKC,UAAKC,GAIjC,SAASC,EAAUC,GAAO,OAAOL,EAAKK,EAAM,CAF5CL,EAAKM,UAAKH,EAAW,MAAM,GAAM,GAIjC,IAAII,EAAkB,EAElBC,EAA0B,KAE9B,SAASC,IAIL,OAHgC,OAA5BD,GAA2E,IAAvCA,EAAwBE,aAC5DF,EAA0B,IAAIG,WAAWb,EAAKc,OAAOC,SAElDL,CACX,CAIA,IAAIM,EAAoB,IAFoB,qBAAhBC,aAA8B,EAAIC,OAAOC,SAAS,QAAQF,YAAcA,aAE3D,SAEzC,MAAMG,EAAwD,oBAAjCJ,EAAkBK,WACzC,SAAUC,EAAKC,GACjB,OAAOP,EAAkBK,WAAWC,EAAKC,EAC7C,EACM,SAAUD,EAAKC,GACjB,MAAMC,EAAMR,EAAkBS,OAAOH,GAErC,OADAC,EAAKG,IAAIF,GACF,CACHG,KAAML,EAAIM,OACVC,QAASL,EAAII,OAErB,EAEA,SAASE,EAAkBR,EAAKS,EAAQC,GAEpC,QAAgB3B,IAAZ2B,EAAuB,CACvB,MAAMR,EAAMR,EAAkBS,OAAOH,GAC/BW,EAAMF,EAAOP,EAAII,OAAQ,KAAO,EAGtC,OAFAjB,IAAuBuB,SAASD,EAAKA,EAAMT,EAAII,QAAQF,IAAIF,GAC3Df,EAAkBe,EAAII,OACfK,CACX,CAEA,IAAIE,EAAMb,EAAIM,OACVK,EAAMF,EAAOI,EAAK,KAAO,EAE7B,MAAMC,EAAMzB,IAEZ,IAAI0B,EAAS,EAEb,KAAOA,EAASF,EAAKE,IAAU,CAC3B,MAAMC,EAAOhB,EAAIiB,WAAWF,GAC5B,GAAIC,EAAO,IAAM,MACjBF,EAAIH,EAAMI,GAAUC,CACxB,CAEA,GAAID,IAAWF,EAAK,CACD,IAAXE,IACAf,EAAMA,EAAIkB,MAAMH,IAEpBJ,EAAMD,EAAQC,EAAKE,EAAKA,EAAME,EAAsB,EAAbf,EAAIM,OAAY,KAAO,EAC9D,MAAML,EAAOZ,IAAuBuB,SAASD,EAAMI,EAAQJ,EAAME,GAGjEE,GAFYjB,EAAaE,EAAKC,GAEhBM,QACdI,EAAMD,EAAQC,EAAKE,EAAKE,EAAQ,KAAO,CAC3C,CAGA,OADA5B,EAAkB4B,EACXJ,CACX,CAMA,IAAIQ,EAAwB,KAE5B,SAASC,IAIL,OAH8B,OAA1BD,IAA4E,IAA1CA,EAAsB1B,OAAO4B,eAAgEtC,IAA1CoC,EAAsB1B,OAAO4B,UAA0BF,EAAsB1B,SAAWf,EAAKc,OAAOC,UACzL0B,EAAwB,IAAIG,SAAS5C,EAAKc,OAAOC,SAE9C0B,CACX,CAEA,IAAII,EAAY3C,EAAK0B,OAQrB,SAASkB,EAAWvC,GAChB,MAAMwC,EAAMzC,EAAUC,GAEtB,OATJ,SAAoBA,GACZA,EAAM,MACVL,EAAKK,GAAOsC,EACZA,EAAYtC,EAChB,CAIIyC,CAAWzC,GACJwC,CACX,CAIA,IAAIE,EAAoB,IAFoB,qBAAhBC,aAA8B,EAAIhC,OAAOC,SAAS,QAAQ+B,YAAcA,aAE3D,QAAS,CAAEC,WAAW,EAAMC,OAAO,IAI5E,SAASC,EAAmBpB,EAAKE,GAE7B,OADAF,KAAc,EACPgB,EAAkBK,OAAO3C,IAAuBuB,SAASD,EAAKA,EAAME,GAC/E,CAEA,SAASoB,EAAcC,GACfX,IAAc3C,EAAK0B,QAAQ1B,EAAKM,KAAKN,EAAK0B,OAAS,GACvD,MAAMrB,EAAMsC,EAIZ,OAHAA,EAAY3C,EAAKK,GAEjBL,EAAKK,GAAOiD,EACLjD,CACX,CAEA,SAASkD,EAAYxD,GAEjB,MAAMyD,SAAczD,EACpB,GAAY,UAARyD,GAA4B,WAARA,GAA4B,MAAPzD,EACzC,MAAQ,GAAGA,IAEf,GAAY,UAARyD,EACA,MAAO,IAAIzD,KAEf,GAAY,UAARyD,EAAkB,CAClB,MAAMC,EAAc1D,EAAI0D,YACxB,OAAmB,MAAfA,EACO,SAEA,UAAUA,IAEzB,CACA,GAAY,YAARD,EAAoB,CACpB,MAAME,EAAO3D,EAAI2D,KACjB,MAAmB,iBAARA,GAAoBA,EAAKhC,OAAS,EAClC,YAAYgC,KAEZ,UAEf,CAEA,GAAIzD,MAAM0D,QAAQ5D,GAAM,CACpB,MAAM2B,EAAS3B,EAAI2B,OACnB,IAAIkC,EAAQ,IACRlC,EAAS,IACTkC,GAASL,EAAYxD,EAAI,KAE7B,IAAI,IAAI8D,EAAI,EAAGA,EAAInC,EAAQmC,IACvBD,GAAS,KAAOL,EAAYxD,EAAI8D,IAGpC,OADAD,GAAS,IACFA,CACX,CAEA,MAAME,EAAiB,sBAAsBC,KAAKC,SAASC,KAAKlE,IAChE,IAAImE,EACJ,KAAIJ,EAAepC,OAAS,GAIxB,OAAOsC,SAASC,KAAKlE,GAEzB,GALImE,EAAYJ,EAAe,GAKd,UAAbI,EAIA,IACI,MAAO,UAAYC,KAAKC,UAAUrE,GAAO,GAC7C,CAAE,MAAOsE,GACL,MAAO,QACX,CAGJ,OAAItE,aAAeuE,MACR,GAAGvE,EAAI2D,SAAS3D,EAAIwE,YAAYxE,EAAIyE,QAGxCN,CACX,CA/EAnB,EAAkBK,SAiFlB,MAAMqB,EAAiD,qBAAzBC,qBACxB,CAAEC,SAAUA,OAAUC,WAAYA,QAClC,IAAIF,sBAAqBG,IAC3B/E,EAAKgF,oBAAoBC,IAAIF,EAAMG,KAAnClF,CAAyC+E,EAAMI,EAAGJ,EAAMK,EAAE,IA2B9D,SAASC,EAAiBC,EAAMC,EAAMC,GAClCxF,EAAKyF,oBAAoBH,EAAMC,EAAMhC,EAAciC,GACvD,CAEA,SAASE,EAAYC,EAAGC,GACpB,IACI,OAAOD,EAAEE,MAAMC,KAAMF,EACzB,CAAE,MAAOG,GACL/F,EAAKgG,oBAAoBzC,EAAcwC,GAC3C,CACJ,CAOO,SAASE,IACZjG,EAAKiG,OACT,CAOO,SAASC,EAAsBC,EAAYC,GAC9C,MAAMC,EAAOvE,EAAkBqE,EAAYnG,EAAKsG,oBAAqBtG,EAAKuG,qBACpEC,EAAO/F,EAEb,OAAOqC,EADK9C,EAAKkG,sBAAsBG,EAAMG,EAAMjD,EAAc6C,IAErE,CAOO,SAASK,EAA0BN,EAAYC,GAClD,MAAMC,EAAOvE,EAAkBqE,EAAYnG,EAAKsG,oBAAqBtG,EAAKuG,qBACpEC,EAAO/F,EAEb,OAAOqC,EADK9C,EAAKyG,0BAA0BJ,EAAMG,EAAMjD,EAAc6C,IAEzE,CAMO,SAASM,EAAaC,GACzB,MAAMN,EAAOvE,EAAkB6E,EAAK3G,EAAKsG,oBAAqBtG,EAAKuG,qBAC7DC,EAAO/F,EAEb,OAAOqC,EADK9C,EAAK0G,aAAaL,EAAMG,GAExC,CAMO,SAASI,EAAeC,GAC3B,MAAMR,EAAOvE,EAAkB+E,EAAY7G,EAAKsG,oBAAqBtG,EAAKuG,qBACpEC,EAAO/F,EAEb,OAAOqC,EADK9C,EAAK4G,eAAeP,EAAMG,GAE1C,CAMO,SAASM,EAAsBxB,EAAMC,GACxC,MAAM/B,EAAMlD,EAAUiF,GAChBxC,EAAsB,kBAATS,EAAoBA,OAAMnD,EAC7C,IAxNgB0G,EAwNZC,OAvNS3G,KADG0G,EAwNMhE,IAvNU,OAANgE,EAuNG,EAAIjF,EAAkBiB,EAAK/C,EAAKsG,oBAAqBtG,EAAKuG,qBACnFU,EAAOxG,EACXiC,IAAqBwE,SAAS5B,EAAO,EAAO2B,GAAM,GAClDvE,IAAqBwE,SAAS5B,EAAO,EAAO0B,GAAM,EACtD,CAEO,SAASG,EAA2B7B,GACvCxC,EAAWwC,EACf,CAEO,SAAS8B,EAAsB9B,EAAMC,GAExC,OAAOhC,EADKF,EAAmBiC,EAAMC,GAEzC,CAEO,SAAS8B,IAA4C,OAAO3B,GAAY,SAAUJ,EAAMC,EAAMC,EAAM8B,EAAMC,GAC7G,IAAIC,EACAC,EACAC,EACAC,EACJ,IACIH,EAAcjC,EACdkC,EAAcjC,EACdkC,EAAcJ,EACdK,EAAcJ,EAEd,OAAOhE,EADKjD,EAAUgF,GAAMsC,kBAAkBvE,EAAmBkC,EAAMC,GAAOnC,EAAmBiE,EAAMC,IAE3G,CAAE,QACEvH,EAAK6H,oBAAoBL,EAAaC,EAAa,GACnDzH,EAAK6H,oBAAoBH,EAAaC,EAAa,EACvD,CACJ,GAAGG,UAAW,CAEP,SAASC,IAA0C,OAAOrC,GAAY,SAAUJ,EAAMC,EAAMC,EAAM8B,EAAMC,GAC3G,IAAIC,EACAC,EACAC,EACAC,EACJ,IACIH,EAAcjC,EACdkC,EAAcjC,EACdkC,EAAcJ,EACdK,EAAcJ,EAEd,OAAOhE,EADKjD,EAAUgF,GAAM0C,gBAAgB3E,EAAmBkC,EAAMC,GAAOnC,EAAmBiE,EAAMC,IAEzG,CAAE,QACEvH,EAAK6H,oBAAoBL,EAAaC,EAAa,GACnDzH,EAAK6H,oBAAoBH,EAAaC,EAAa,EACvD,CACJ,GAAGG,UAAW,CAEP,SAASG,EAA2B3C,EAAMC,GAC7C,IACI,IAAI2C,EAAS,CAAC/C,EAAGG,EAAMF,EAAGG,GAU1B,MAAMxC,EAAM,IAAIoF,SATNC,CAAC9C,EAAMC,KACb,MAAMJ,EAAI+C,EAAO/C,EACjB+C,EAAO/C,EAAI,EACX,IACI,OAjEhB,SAA0BG,EAAMC,EAAMC,EAAM8B,GACxCtH,EAAKqI,oBAAoB/C,EAAMC,EAAMhC,EAAciC,GAAOjC,EAAc+D,GAC5E,CA+DuBgB,CAAiBnD,EAAG+C,EAAO9C,EAAGE,EAAMC,EAC/C,CAAE,QACE2C,EAAO/C,EAAIA,CACf,KAGJ,OAAO5B,EAAcR,EACzB,CAAE,QACEmF,EAAO/C,EAAI+C,EAAO9C,EAAI,CAC1B,CACJ,CAEO,SAASmD,IAEZ,OAAOhF,EADK,IAAIiB,MAEpB,CAEO,SAASgE,EAA6BlD,EAAMC,GAC/C,MACMyB,EAAOlF,EADDxB,EAAUiF,GAAMb,MACQ1E,EAAKsG,oBAAqBtG,EAAKuG,qBAC7DU,EAAOxG,EACbiC,IAAqBwE,SAAS5B,EAAO,EAAO2B,GAAM,GAClDvE,IAAqBwE,SAAS5B,EAAO,EAAO0B,GAAM,EACtD,CAEO,SAASyB,EAA6BnD,EAAMC,GAC/C,IAAIiC,EACAC,EACJ,IACID,EAAclC,EACdmC,EAAclC,EACdmD,QAAQC,MAAMtF,EAAmBiC,EAAMC,GAC3C,CAAE,QACEvF,EAAK6H,oBAAoBL,EAAaC,EAAa,EACvD,CACJ,CAEO,SAASmB,IAAgC,OAAOlD,GAAY,WAE/D,OAAOnC,EADKsF,KAAKA,KAErB,GAAGf,UAAW,CAEP,SAASgB,IAAkC,OAAOpD,GAAY,WAEjE,OAAOnC,EADKwF,OAAOA,OAEvB,GAAGjB,UAAW,CAEP,SAASkB,IAAsC,OAAOtD,GAAY,WAErE,OAAOnC,EADK0F,WAAWA,WAE3B,GAAGnB,UAAW,CAEP,SAASoB,IAAkC,OAAOxD,GAAY,WAEjE,OAAOnC,EADK4F,OAAOA,OAEvB,GAAGrB,UAAW,CAEP,SAASsB,EAAwB9D,GAEpC,YADgCjF,IAApBC,EAAUgF,EAE1B,CAEO,SAAS+D,EAAiC/D,EAAMC,GAEnD,OAAOhC,EADK,IAAI+F,SAASjG,EAAmBiC,EAAMC,IAEtD,CAEO,SAASgE,IAAgC,OAAO7D,GAAY,SAAUJ,EAAMC,GAE/E,OAAOhC,EADKjD,EAAUgF,GAAMnB,KAAK7D,EAAUiF,IAE/C,GAAGuC,UAAW,CAEP,SAAS0B,IAAgC,OAAO9D,GAAY,SAAUJ,EAAMC,EAAMC,GAErF,OAAOjC,EADKjD,EAAUgF,GAAMnB,KAAK7D,EAAUiF,GAAOjF,EAAUkF,IAEhE,GAAGsC,UAAW,CAEP,SAAS2B,EAAiBnE,EAAMC,GACnC,MAAM,IAAIf,MAAMnB,EAAmBiC,EAAMC,GAC7C,CAEO,SAASmE,EAAwBpE,EAAMC,GAC1C,MACMyB,EAAOlF,EADD2B,EAAYnD,EAAUiF,IACEvF,EAAKsG,oBAAqBtG,EAAKuG,qBAC7DU,EAAOxG,EACbiC,IAAqBwE,SAAS5B,EAAO,EAAO2B,GAAM,GAClDvE,IAAqBwE,SAAS5B,EAAO,EAAO0B,GAAM,EACtD,CAEO,SAAS2C,EAA4BrE,EAAMC,GAE9C,OAAOhC,EADKjD,EAAUgF,GAAMsE,KAAKtJ,EAAUiF,IAE/C,CAEO,SAASsE,EAAsCvE,GAClDwE,eAAexJ,EAAUgF,GAC7B,CAEO,SAASyE,EAA4BzE,GAExC,OAAO/B,EADKjD,EAAUgF,GAE1B,CAEO,SAAS0E,EAAsC1E,GAElD,OAAO/B,EADKjD,EAAUgF,GAAMwE,eAEhC,CAEO,SAASG,EAAuB3E,GAEnC,MADwC,oBAArBhF,EAAUgF,EAEjC,CAEO,SAAS4E,EAA+B5E,GAE3C,OAAO/B,EADK4E,QAAQgC,QAAQ7J,EAAUgF,IAE1C,CAEO,SAAS8E,GAAmB9E,GAC/B,MAAM9B,EAAMV,EAAWwC,GAAM+E,SAC7B,GAAiB,GAAb7G,EAAI8G,MAEJ,OADA9G,EAAI2B,EAAI,GACD,EAGX,OADY,CAEhB,CAEO,SAASoF,GAA+BjF,EAAMC,EAAMC,GACvD,MAAMzC,EA7RV,SAAwBuC,EAAMC,EAAML,EAAMS,GACtC,MAAMZ,EAAQ,CAAEI,EAAGG,EAAMF,EAAGG,EAAM+E,IAAK,EAAGpF,QACpCsF,EAAO,WAITzF,EAAMuF,MACN,MAAMnF,EAAIJ,EAAMI,EAChBJ,EAAMI,EAAI,EACV,IAAI,QAAAsF,EAAA3C,UAAAlG,OAPSgE,EAAI,IAAAzF,MAAAsK,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ9E,EAAI8E,GAAA5C,UAAA4C,GAQb,OAAO/E,EAAER,EAAGJ,EAAMK,KAAMQ,EAC5B,CAAE,QACsB,MAAdb,EAAMuF,KACRtK,EAAKgF,oBAAoBC,IAAIF,EAAMG,KAAnClF,CAAyCmF,EAAGJ,EAAMK,GAClDT,EAAcG,WAAWC,IAEzBA,EAAMI,EAAIA,CAElB,CACJ,EAGA,OAFAqF,EAAKH,SAAWtF,EAChBJ,EAAcE,SAAS2F,EAAMzF,EAAOA,GAC7ByF,CACX,CAsQgBG,CAAerF,EAAMC,EAAM,IAAKF,GAC5C,OAAO9B,EAAcR,EACzB,C","sources":["../../../dist/target/browser/superscript.js","../../../dist/target/browser/superscript_bg.js"],"sourcesContent":["\nimport * as wasm from \"./superscript_bg.wasm\";\nimport { __wbg_set_wasm } from \"./superscript_bg.js\";\n__wbg_set_wasm(wasm);\nexport * from \"./superscript_bg.js\";\n\nwasm.__wbindgen_start();\n","let wasm;\nexport function __wbg_set_wasm(val) {\n    wasm = val;\n}\n\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachedDataViewMemory0 = null;\n\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || (cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer)) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nconst CLOSURE_DTORS = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(state => {\n    wasm.__wbindgen_export_2.get(state.dtor)(state.a, state.b)\n});\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        const a = state.a;\n        state.a = 0;\n        try {\n            return f(a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                wasm.__wbindgen_export_2.get(state.dtor)(a, state.b);\n                CLOSURE_DTORS.unregister(state);\n            } else {\n                state.a = a;\n            }\n        }\n    };\n    real.original = state;\n    CLOSURE_DTORS.register(real, state, state);\n    return real;\n}\nfunction __wbg_adapter_20(arg0, arg1, arg2) {\n    wasm.__wbindgen_export_3(arg0, arg1, addHeapObject(arg2));\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_export_5(addHeapObject(e));\n    }\n}\n/**\n*\n** Sets up a panic hook to log panics to the console.\n** This method is a nice-to-have for debugging purposes.\n** It should be called once on initialization of the WASM module.\n*/\nexport function start() {\n    wasm.start();\n}\n\n/**\n* @param {string} definition\n* @param {WasmHostContext} context\n* @returns {Promise<string>}\n*/\nexport function evaluate_with_context(definition, context) {\n    const ptr0 = passStringToWasm0(definition, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.evaluate_with_context(ptr0, len0, addHeapObject(context));\n    return takeObject(ret);\n}\n\n/**\n* @param {string} definition\n* @param {WasmHostContext} context\n* @returns {Promise<string>}\n*/\nexport function evaluate_ast_with_context(definition, context) {\n    const ptr0 = passStringToWasm0(definition, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.evaluate_ast_with_context(ptr0, len0, addHeapObject(context));\n    return takeObject(ret);\n}\n\n/**\n* @param {string} ast\n* @returns {Promise<string>}\n*/\nexport function evaluate_ast(ast) {\n    const ptr0 = passStringToWasm0(ast, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.evaluate_ast(ptr0, len0);\n    return takeObject(ret);\n}\n\n/**\n* @param {string} expression\n* @returns {Promise<string>}\n*/\nexport function parse_into_ast(expression) {\n    const ptr0 = passStringToWasm0(expression, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.parse_into_ast(ptr0, len0);\n    return takeObject(ret);\n}\n\nfunction __wbg_adapter_42(arg0, arg1, arg2, arg3) {\n    wasm.__wbindgen_export_6(arg0, arg1, addHeapObject(arg2), addHeapObject(arg3));\n}\n\nexport function __wbindgen_string_get(arg0, arg1) {\n    const obj = getObject(arg1);\n    const ret = typeof(obj) === 'string' ? obj : undefined;\n    var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n    var len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n};\n\nexport function __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nexport function __wbindgen_string_new(arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_computedproperty_a69e11a226bb86d6() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n    let deferred0_0;\n    let deferred0_1;\n    let deferred1_0;\n    let deferred1_1;\n    try {\n        deferred0_0 = arg1;\n        deferred0_1 = arg2;\n        deferred1_0 = arg3;\n        deferred1_1 = arg4;\n        const ret = getObject(arg0).computed_property(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n        return addHeapObject(ret);\n    } finally {\n        wasm.__wbindgen_export_4(deferred0_0, deferred0_1, 1);\n        wasm.__wbindgen_export_4(deferred1_0, deferred1_1, 1);\n    }\n}, arguments) };\n\nexport function __wbg_deviceproperty_7ad9b10b4fcafa39() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n    let deferred0_0;\n    let deferred0_1;\n    let deferred1_0;\n    let deferred1_1;\n    try {\n        deferred0_0 = arg1;\n        deferred0_1 = arg2;\n        deferred1_0 = arg3;\n        deferred1_1 = arg4;\n        const ret = getObject(arg0).device_property(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n        return addHeapObject(ret);\n    } finally {\n        wasm.__wbindgen_export_4(deferred0_0, deferred0_1, 1);\n        wasm.__wbindgen_export_4(deferred1_0, deferred1_1, 1);\n    }\n}, arguments) };\n\nexport function __wbg_new_b85e72ed1bfd57f9(arg0, arg1) {\n    try {\n        var state0 = {a: arg0, b: arg1};\n        var cb0 = (arg0, arg1) => {\n            const a = state0.a;\n            state0.a = 0;\n            try {\n                return __wbg_adapter_42(a, state0.b, arg0, arg1);\n            } finally {\n                state0.a = a;\n            }\n        };\n        const ret = new Promise(cb0);\n        return addHeapObject(ret);\n    } finally {\n        state0.a = state0.b = 0;\n    }\n};\n\nexport function __wbg_new_abda76e883ba8a5f() {\n    const ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport function __wbg_stack_658279fe44541cf6(arg0, arg1) {\n    const ret = getObject(arg1).stack;\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n    const len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n};\n\nexport function __wbg_error_f851667af71bcfc6(arg0, arg1) {\n    let deferred0_0;\n    let deferred0_1;\n    try {\n        deferred0_0 = arg0;\n        deferred0_1 = arg1;\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_export_4(deferred0_0, deferred0_1, 1);\n    }\n};\n\nexport function __wbg_self_3093d5d1f7bcb682() { return handleError(function () {\n    const ret = self.self;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_window_3bcfc4d31bc012f8() { return handleError(function () {\n    const ret = window.window;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_globalThis_86b222e13bdf32ed() { return handleError(function () {\n    const ret = globalThis.globalThis;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_global_e5a3fe56f8be9485() { return handleError(function () {\n    const ret = global.global;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbindgen_is_undefined(arg0) {\n    const ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nexport function __wbg_newnoargs_76313bd6ff35d0f2(arg0, arg1) {\n    const ret = new Function(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_call_1084a111329e68ce() { return handleError(function (arg0, arg1) {\n    const ret = getObject(arg0).call(getObject(arg1));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_call_89af060b4e1523f2() { return handleError(function (arg0, arg1, arg2) {\n    const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport function __wbindgen_debug_string(arg0, arg1) {\n    const ret = debugString(getObject(arg1));\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n    const len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n};\n\nexport function __wbg_then_95e6edc0f89b73b1(arg0, arg1) {\n    const ret = getObject(arg0).then(getObject(arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_queueMicrotask_12a30234db4045d3(arg0) {\n    queueMicrotask(getObject(arg0));\n};\n\nexport function __wbindgen_object_clone_ref(arg0) {\n    const ret = getObject(arg0);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_queueMicrotask_48421b3cc9052b68(arg0) {\n    const ret = getObject(arg0).queueMicrotask;\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_is_function(arg0) {\n    const ret = typeof(getObject(arg0)) === 'function';\n    return ret;\n};\n\nexport function __wbg_resolve_570458cb99d56a43(arg0) {\n    const ret = Promise.resolve(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_cb_drop(arg0) {\n    const obj = takeObject(arg0).original;\n    if (obj.cnt-- == 1) {\n        obj.a = 0;\n        return true;\n    }\n    const ret = false;\n    return ret;\n};\n\nexport function __wbindgen_closure_wrapper3215(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 296, __wbg_adapter_20);\n    return addHeapObject(ret);\n};\n\n"],"names":["__wbg_set_wasm","wasm","val","heap","Array","fill","undefined","getObject","idx","push","WASM_VECTOR_LEN","cachedUint8ArrayMemory0","getUint8ArrayMemory0","byteLength","Uint8Array","memory","buffer","cachedTextEncoder","TextEncoder","module","require","encodeString","encodeInto","arg","view","buf","encode","set","read","length","written","passStringToWasm0","malloc","realloc","ptr","subarray","len","mem","offset","code","charCodeAt","slice","cachedDataViewMemory0","getDataViewMemory0","detached","DataView","heap_next","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","getStringFromWasm0","decode","addHeapObject","obj","debugString","type","description","name","isArray","debug","i","builtInMatches","exec","toString","call","className","JSON","stringify","_","Error","message","stack","CLOSURE_DTORS","FinalizationRegistry","register","unregister","state","__wbindgen_export_2","get","dtor","a","b","__wbg_adapter_20","arg0","arg1","arg2","__wbindgen_export_3","handleError","f","args","apply","this","e","__wbindgen_export_5","start","evaluate_with_context","definition","context","ptr0","__wbindgen_export_0","__wbindgen_export_1","len0","evaluate_ast_with_context","evaluate_ast","ast","parse_into_ast","expression","__wbindgen_string_get","x","ptr1","len1","setInt32","__wbindgen_object_drop_ref","__wbindgen_string_new","__wbg_computedproperty_a69e11a226bb86d6","arg3","arg4","deferred0_0","deferred0_1","deferred1_0","deferred1_1","computed_property","__wbindgen_export_4","arguments","__wbg_deviceproperty_7ad9b10b4fcafa39","device_property","__wbg_new_b85e72ed1bfd57f9","state0","Promise","cb0","__wbindgen_export_6","__wbg_adapter_42","__wbg_new_abda76e883ba8a5f","__wbg_stack_658279fe44541cf6","__wbg_error_f851667af71bcfc6","console","error","__wbg_self_3093d5d1f7bcb682","self","__wbg_window_3bcfc4d31bc012f8","window","__wbg_globalThis_86b222e13bdf32ed","globalThis","__wbg_global_e5a3fe56f8be9485","global","__wbindgen_is_undefined","__wbg_newnoargs_76313bd6ff35d0f2","Function","__wbg_call_1084a111329e68ce","__wbg_call_89af060b4e1523f2","__wbindgen_throw","__wbindgen_debug_string","__wbg_then_95e6edc0f89b73b1","then","__wbg_queueMicrotask_12a30234db4045d3","queueMicrotask","__wbindgen_object_clone_ref","__wbg_queueMicrotask_48421b3cc9052b68","__wbindgen_is_function","__wbg_resolve_570458cb99d56a43","resolve","__wbindgen_cb_drop","original","cnt","__wbindgen_closure_wrapper3215","real","_len","_key","makeMutClosure"],"sourceRoot":""}